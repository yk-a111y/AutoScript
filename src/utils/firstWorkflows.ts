export default [
  {
    extVersion: '1.28.27',
    name: '快手直播插件Test2',
    icon: 'riGlobalLine',
    table: [
      {
        id: 'LhNWl',
        name: 'title',
        type: 'string',
      },
      {
        id: 'wua-p',
        name: 'config',
        type: 'array',
      },
    ],
    version: '1.28.27',
    drawflow: {
      edges: [
        {
          data: {},
          events: {},
          id: 'vueflow__edge-7bia12p7bia12p-output-1-7utnt7e7utnt7e-input-1',
          markerEnd: 'arrowclosed',
          selectable: true,
          source: '7bia12p',
          sourceHandle: '7bia12p-output-1',
          sourceX: 892,
          sourceY: 72,
          target: '7utnt7e',
          targetHandle: '7utnt7e-input-1',
          targetX: 952,
          targetY: 72,
          type: 'custom',
          updatable: true,
        },
        {
          data: {},
          events: {},
          id: 'vueflow__edge-7utnt7e7utnt7e-output-1-vu886envu886en-input-1',
          markerEnd: 'arrowclosed',
          selectable: true,
          source: '7utnt7e',
          sourceHandle: '7utnt7e-output-1',
          sourceX: 1184,
          sourceY: 72,
          target: 'vu886en',
          targetHandle: 'vu886en-input-1',
          targetX: 1244,
          targetY: 72,
          type: 'custom',
          updatable: true,
        },
        {
          data: {},
          events: {},
          id: 'vueflow__edge-vu886envu886en-output-1-r0re6isr0re6is-input-1',
          markerEnd: 'arrowclosed',
          selectable: true,
          source: 'vu886en',
          sourceHandle: 'vu886en-output-1',
          sourceX: 1476,
          sourceY: 72,
          target: 'r0re6is',
          targetHandle: 'r0re6is-input-1',
          targetX: 1534.684096971826,
          targetY: 73.27159220860314,
          type: 'custom',
          updatable: true,
        },
        {
          data: {},
          events: {},
          id: 'vueflow__edge-vu886envu886en-output-1-63r5mj263r5mj2-input-1',
          markerEnd: 'arrowclosed',
          selectable: true,
          source: 'vu886en',
          sourceHandle: 'vu886en-output-1',
          sourceX: 1476,
          sourceY: 72,
          target: '63r5mj2',
          targetHandle: '63r5mj2-input-1',
          targetX: 1544.9884244753928,
          targetY: 195.34619193202693,
          type: 'custom',
          updatable: true,
        },
        {
          class: 'source-PGJ-vcq2CHF0mXiizB-DK-output-1 target-7bia12p-input-1',
          data: {},
          events: {},
          id: 'vueflow__edge-PGJ-vcq2CHF0mXiizB-DKPGJ-vcq2CHF0mXiizB-DK-output-1-7bia12p7bia12p-input-1',
          markerEnd: 'arrowclosed',
          selectable: true,
          source: 'PGJ-vcq2CHF0mXiizB-DK',
          sourceHandle: 'PGJ-vcq2CHF0mXiizB-DK-output-1',
          sourceX: 308,
          sourceY: 72,
          target: '7bia12p',
          targetHandle: '7bia12p-input-1',
          targetX: 660,
          targetY: 72,
          type: 'custom',
          updatable: true,
        },
      ],
      nodes: [
        {
          data: {
            active: true,
            customUserAgent: false,
            description: '跳转快手直播后台',
            disableBlock: false,
            inGroup: false,
            onError: {
              dataToInsert: [],
              enable: false,
              insertData: false,
              retry: false,
              retryInterval: 2,
              retryTimes: 1,
              toDo: 'error',
            },
            settings: {
              blockTimeout: 0,
              debugMode: false,
            },
            tabZoom: 1,
            updatePrevTab: false,
            url: 'https://live.kuaishou.com/u/3xssryfshxy33uu',
            userAgent: '',
            waitTabLoaded: false,
          },
          events: {},
          id: '7bia12p',
          label: 'new-tab',
          position: {
            x: 680,
            y: 36,
          },
          type: 'BlockBasic',
        },
        {
          data: {
            $breakpoint: false,
            code: "console.log(\"直播间插件开始执行...\");\n\nconst chatHistory = document.querySelector('.chat-history');\nconst observer = new MutationObserver((mutations) => {\n  mutations.forEach(mutation => {\n\t\tmutation.addedNodes.forEach(addedNode => {\n\t\t\tconsole.log('检测到评论区变化', addedNode, automaRefData('table', '0').title);\n\t\t\thandleKuaiShouLiveRoom(addedNode);\n\t\t});\n\t})\n});\n\n// 观察评论区变化\nconst config = { childList: true, subtree: true };observer.observe(chatHistory, config);\nobserver.observe(chatHistory, config);\n\n// 评论区新增DOM的回调\nconst handleKuaiShouLiveRoom = (addedNode) => {\n  // 如果回复过，不再评论\n  if (addedNode instanceof Element && addedNode.getAttribute(\"hasComment\") == \"true\") return;\n\n  // 获取评论人昵称和内容\n\tconst nickname = getTextNodeContent(addedNode, './/span[contains(@class,\"username\")]');\n  // console.log('!!!!!!!!!!!!', nickname)\n\tconst comment = getTextNodeContent(addedNode, './/span[contains(@class,\"comment\")]');\n  // console.log('!!!!!!!!!!!!', comment)\n\tif (!nickname || !comment) return;\n\n  // 获取直播间ID和昵称\n\tconst { bName, bExternalId } = getNameAndId();\n\n  // TODO 判断黑名单\n\n  // 自动回复\n  const replyContent = processQaKeywords(comment);\n  console.log('!!!!!!!!!!!!', replyContent)\n  const replyTimestamp = new Date().toISOString().replace('T', ' ').substring(0, 19);\n\n  if (replyContent) {\n\t\t// 发送评论输入框内容\n\t\tsendTextareaContent(replyContent)\n\t\t// 给addedNode添加一个属性，用于判断是否已经处理过评论\n\t\taddedNode.setAttribute(\"hasComment\", \"true\");\n\t\t// 评论的内容\n\t\t// const requestObj = {\n\t\t// \tmsg: nickname + \":\" + comment,\n\t\t// \ttime: new Date().toISOString().slice(0, 19).replace('T', ' '),\n\t\t// \tnickname,\n\t\t// };\n\t\t// AI回答\n\t\t// const responseObj = replyContent && {\n\t\t// \tmsg: bName + \":\" + replyContent,\n\t\t// \ttime: replyTimestamp,\n\t\t// \tnickname: bName,\n\t\t// };\n\t\t// const params = {\n\t\t// \tapplicationScene: LivePlatform.KUAISHOU, // 抖音直播\n\t\t// \tdataSource: dataSource.LIVE_ROOM, // 1: 短视频，2: 直播间\n\t\t// \tname: liveStreamingName, // 直播间名称\n\t\t// \tbExternalId,\n\t\t// \tbName,\n\t\t// \tnickname,\n\t\t// \tcontent: [requestObj, responseObj].map(JSON.stringify).join(\",\"),\n\t\t// }\n\t\t// 上报直播评论以及回复\n\t\t// sendCommentPostRequest('https://vshow.58.com/live/externaldata/report', params, () => { })\n\t\t// TODO: AI语音回复接口\n\t\t// sendGetRequest('https://10.253.104.141:9902/generate_audio', {\n\t\t// \ttext: replyContent,\n\t\t// \tdevice_name: bName,\n\t\t// \tdouyin_id: bExternalId,\n\t\t// }, () => { })\n\t}\n}\n\n// 获取节点的文本内容\nconst getTextNodeContent = (node, xpath) => {\n  const element = document.evaluate(xpath, node, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n  return element ? element.textContent.replace(\"：\", \"\").replace(\":\", \"\").trim() : null;\n}\n\n// 获取快手直播账号的昵称和ID\nconst getNameAndId = () => {\n\tconst nameElement = document.querySelector('.name-group .name');\n\tconst bName = nameElement?.textContent.trim() || '';\n\tconst bExternalId = window.location.pathname.split('/').pop() || '';\n\n\treturn { bName, bExternalId };\n}\n\n// 发送快手评论框内容\nfunction sendTextareaContent(content) {\n\tconst textarea = document.querySelector('textarea.box-boder');\n\tif (textarea) {\n\t\t// 设置文本域内容\n\t\ttextarea.value = content;\n\t\tconst event = new Event('input', { bubbles: true });\n\t\ttextarea.dispatchEvent(event);\n\t\t// 点击发送按钮\n\t\tsetTimeout(() => {\n\t\t\tconst submitButton = document.querySelector('.submit-button.valid');\n\t\t\tif (submitButton) {\n\t\t\t\tsubmitButton.click();\n\t\t\t}\n\t\t}, 100)\n\t}\n}\n\nconst defaultQaKeywords = `\n多少钱#具体的费用您可以点击小黄车查看，咱们想要哪个服务直接买就行\n在哪里#您可以先下单，能下单的话就是可以给您提供服务的\n时间#咱们是一周7天都可以提供服务的，您在下单的时候选择上门服务的时间就行了\n购买#点击屏幕下方的小黄车，点击需要的服务直接购买就行啊\n退款#过期不用都是自动退哈，这点也请放心，可以先囤着\n`\n\n//关键词自动回复的匹配内容\nfunction processQaKeywords(comment) {\n\tlet replyContent = \"\";\n\n\tif (!comment) return '';\n\n\t// TODO 合并默认知识库和用户自定义知识库\n\tlet combinedQaKeywords = defaultQaKeywords;\n\n\tlet qaKeywordsArr = combinedQaKeywords.split(\"\\n\");\n\tfor (let index in qaKeywordsArr) {\n\t\tlet row = qaKeywordsArr[index];\n\t\tlet qa = row.split(\"#\");\n\t\tif (qa.length !== 2) {\n\t\t\tcontinue;\n\t\t}\n\t\tlet keywords = qa[0].split(\"|\");\n\t\tif (containsKeyword(comment, keywords)) {\n\t\t\treplyContent = qa[1];\n\t\t\treturn replyContent;\n\t\t}\n\t}\n\treturn replyContent;\n}\n\n//判断js字符串是否包含一个关键词数组的任意一个关键词\nfunction containsKeyword(inputString, keywords) {\n  if (keywords.length == 0) return false;\n  for (var i = 0; i < keywords.length; i++) {\n    if (!keywords[i]) continue;\n    if (inputString.includes(keywords[i])) {\n      return true;\n    }\n  }\n  return false;\n}",
            context: 'website',
            description: '开启评论监听',
            disableBlock: false,
            everyNewTab: false,
            preloadScripts: [],
            runBeforeLoad: false,
            settings: {
              blockTimeout: 0,
              debugMode: false,
            },
            timeout: 20000,
          },
          events: {},
          id: 'r0re6is',
          label: 'javascript-code',
          position: {
            x: 1554.684096971826,
            y: 37.27159220860314,
          },
          type: 'BlockBasic',
        },
        {
          data: {
            assignVariable: true,
            dataColumn: 'LhNWl',
            description: '',
            disableBlock: true,
            domain: '',
            expirationDate: '',
            getAll: true,
            httpOnly: false,
            jsonCode: '{\n\n}',
            name: '',
            path: '',
            sameSite: '',
            saveData: true,
            secure: false,
            session: false,
            type: 'get',
            url: 'https://live.kuaishou.com',
            useJson: false,
            value: '',
            variableName: 'siteCookie',
          },
          events: {},
          id: '7utnt7e',
          label: 'cookie',
          position: {
            x: 972,
            y: 36,
          },
          type: 'BlockBasic',
        },
        {
          data: {
            code: "automaNextBlock({\n  title: 'Something'\n})",
            context: 'website',
            description: '获取插件配置',
            disableBlock: false,
            everyNewTab: false,
            preloadScripts: [],
            runBeforeLoad: false,
            timeout: 20000,
          },
          events: {},
          id: 'vu886en',
          label: 'javascript-code',
          position: {
            x: 1264,
            y: 36,
          },
          type: 'BlockBasic',
        },
        {
          data: {
            description: '快手直播间Id',
            disableBlock: false,
            onError: {
              dataToInsert: [],
              enable: false,
              insertData: false,
              retry: false,
              retryInterval: 2,
              retryTimes: 1,
              toDo: 'error',
            },
            parameters: [
              {
                data: {
                  masks: [
                    {
                      isRegex: false,
                      lazy: false,
                      mask: '',
                    },
                  ],
                  required: false,
                  unmaskValue: false,
                  useMask: false,
                },
                defaultValue: '',
                description: '快手直播间Id',
                name: 'displayId',
                placeholder: '请输入快手直播间Id',
                type: 'string',
              },
            ],
            settings: {
              blockTimeout: 0,
              debugMode: false,
            },
            timeout: 60000,
          },
          events: {},
          id: '0m8q0zt',
          label: 'parameter-prompt',
          position: {
            x: 403,
            y: 146,
          },
          type: 'BlockBasic',
        },
        {
          data: {
            code: "console.log(\"新用户入场检测...\");\n\nconst lastCount = 0;\nconst newUserObserver = new MutationObserver((mutations) => {\n  mutations.forEach((mutation) => {\n    if (mutation.type === 'childList') {\n      const topCountElement = document.querySelector('.top-count');\n      if (topCountElement) {\n        const currentCount = parseInt(topCountElement.textContent, 10);\n        if (currentCount > lastCount) {\n          const newUserCount = currentCount - lastCount;\n          sendTextareaContent('欢迎新用户光临直播间');\n        }\n        lastCount = currentCount;\n      }\n    }\n  });\n});\nconst targetNode = document.querySelector('.top-count');\nif (targetNode) {\n  newUserObserver.observe(targetNode, {\n    childList: true,\n    subtree: true\n  });\n}\n\n// 发送快手评论框内容\nfunction sendTextareaContent(content) {\n\tconst textarea = document.querySelector('textarea.box-boder');\n\tif (textarea) {\n\t\t// 设置文本域内容\n\t\ttextarea.value = content;\n\t\tconst event = new Event('input', { bubbles: true });\n\t\ttextarea.dispatchEvent(event);\n\t\t// 点击发送按钮\n\t\tsetTimeout(() => {\n\t\t\tconst submitButton = document.querySelector('.submit-button.valid');\n\t\t\tif (submitButton) {\n\t\t\t\tsubmitButton.click();\n\t\t\t}\n\t\t}, 100)\n\t}\n}",
            context: 'website',
            description: '新用户欢迎',
            disableBlock: false,
            everyNewTab: false,
            preloadScripts: [],
            runBeforeLoad: false,
            timeout: 20000,
          },
          events: {},
          id: '63r5mj2',
          label: 'javascript-code',
          position: {
            x: 1564.9884244753928,
            y: 159.34619193202693,
          },
          type: 'BlockBasic',
        },
        {
          data: {
            activeInInput: false,
            contextMenuName: '',
            contextTypes: [],
            date: '',
            days: [],
            delay: 5,
            description: '',
            disableBlock: false,
            interval: 60,
            isUrlRegex: false,
            observeElement: {
              baseElOptions: {
                attributeFilter: [],
                attributes: false,
                characterData: false,
                childList: true,
                subtree: false,
              },
              baseSelector: '',
              matchPattern: '',
              selector: '',
              targetOptions: {
                attributeFilter: [],
                attributes: false,
                characterData: false,
                childList: true,
                subtree: false,
              },
            },
            parameters: [],
            preferParamsInTab: false,
            settings: {
              blockTimeout: 0,
              debugMode: false,
            },
            shortcut: '',
            time: '00:00',
            type: 'manual',
            url: '',
          },
          events: {},
          id: 'PGJ-vcq2CHF0mXiizB-DK',
          label: 'trigger',
          position: {
            x: 96,
            y: 36,
          },
          type: 'BlockBasic',
        },
        {
          data: {
            code: "console.log(\"直播间循环话术开启...\");\n\n\nsetInterval(function () {\n\t\tconst message = getRandomElement();\n\t\tif (!message) return;\n\t\tsendReplyContent(message);\n\t}, speakLimit);\n\n// 发送快手评论框内容\nfunction sendTextareaContent(content) {\n\tconst textarea = document.querySelector('textarea.box-boder');\n\tif (textarea) {\n\t\t// 设置文本域内容\n\t\ttextarea.value = content;\n\t\tconst event = new Event('input', { bubbles: true });\n\t\ttextarea.dispatchEvent(event);\n\t\t// 点击发送按钮\n\t\tsetTimeout(() => {\n\t\t\tconst submitButton = document.querySelector('.submit-button.valid');\n\t\t\tif (submitButton) {\n\t\t\t\tsubmitButton.click();\n\t\t\t}\n\t\t}, 100)\n\t}\n}\n\nfunction getRandomElement() {\n\tif (questionsQueue.length <= 0) {\n\t\tquestionsQueue = deepCopy(questions);\n\t}\n\trandomElement = questionsQueue.shift();\n\treturn randomElement;\n}\n// automaNextBlock()",
            context: 'website',
            description: '循环话术',
            disableBlock: false,
            everyNewTab: false,
            preloadScripts: [],
            runBeforeLoad: false,
            timeout: 20000,
          },
          events: {},
          id: 'uj2ki03',
          label: 'javascript-code',
          position: {
            x: 1574.84988896323,
            y: 280.7026148549235,
          },
          type: 'BlockBasic',
        },
      ],
      position: [-1436.15635541965, 100.17791489822486],
      viewport: {
        x: -1436.15635541965,
        y: 100.17791489822486,
        zoom: 1.1500501527875697,
      },
      zoom: 1.1500501527875697,
    },
    settings: {
      blockDelay: 0,
      debugMode: false,
      defaultColumnName: 'column',
      execContext: 'popup',
      executedBlockOnWeb: false,
      inputAutocomplete: true,
      insertDefaultColumn: true,
      notification: true,
      onError: 'stop-workflow',
      publicId: '',
      restartTimes: 3,
      reuseLastState: false,
      saveLog: true,
      tabLoadTimeout: 30000,
    },
    globalData: '{\n\t"key": "value",\n  "test": "hello"\n}',
    description: '快手直播自动回复、循环话术、欢迎语',
    includedWorkflows: {},
  },
  {
    extVersion: '1.28.27',
    name: '快手评论自动回复-release-1.0.0',
    icon: 'riGlobalLine',
    table: [
      {
        id: 'DJEbd',
        name: 'content',
        type: 'any',
      },
      {
        id: 'eESMN',
        name: 'nickname',
        type: 'string',
      },
      {
        id: 'e3Jsr',
        name: 'time',
        type: 'string',
      },
      {
        id: 'Hn-FC',
        name: 'videoTitle',
        type: 'string',
      },
      {
        id: 'NqmZq',
        name: 'log',
        type: 'string',
      },
    ],
    version: '1.28.27',
    drawflow: {
      nodes: [
        {
          type: 'BlockBasic',
          data: {
            disableBlock: false,
            description: '',
            type: 'manual',
            interval: 60,
            delay: 5,
            date: '',
            time: '00:00',
            url: '',
            shortcut: '',
            activeInInput: false,
            isUrlRegex: false,
            days: [],
            contextMenuName: '',
            contextTypes: [],
            parameters: [],
            preferParamsInTab: false,
            observeElement: {
              selector: '',
              baseSelector: '',
              matchPattern: '',
              targetOptions: {
                subtree: false,
                childList: true,
                attributes: false,
                attributeFilter: [],
                characterData: false,
              },
              baseElOptions: {
                subtree: false,
                childList: true,
                attributes: false,
                attributeFilter: [],
                characterData: false,
              },
            },
            triggers: [
              {
                data: {
                  activeInInput: false,
                  contextMenuName: '',
                  contextTypes: [],
                  date: '',
                  days: [],
                  delay: 5,
                  description: '',
                  disableBlock: false,
                  interval: 60,
                  isUrlRegex: false,
                  observeElement: {
                    baseElOptions: {
                      attributeFilter: [],
                      attributes: false,
                      characterData: false,
                      childList: true,
                      subtree: false,
                    },
                    baseSelector: '',
                    matchPattern: '',
                    selector: '',
                    targetOptions: {
                      attributeFilter: [],
                      attributes: false,
                      characterData: false,
                      childList: true,
                      subtree: false,
                    },
                  },
                  parameters: [],
                  preferParamsInTab: false,
                  shortcut: '',
                  time: '00:00',
                  type: 'manual',
                  url: '',
                },
                id: 'mwxx-',
                type: 'manual',
              },
              {
                id: 'ZnQ6n',
                type: 'cron-job',
                data: {
                  expression: '0 0/30 9-20 * * ?',
                },
              },
            ],
          },
          events: {},
          id: 'o5zggh5F_y-yuKvN9914Q',
          label: 'trigger',
          position: {
            x: 98.9048982191099,
            y: -113.41361806367796,
          },
        },
        {
          type: 'BlockBasic',
          data: {
            description: '点击选择作品',
            disableBlock: false,
            findBy: 'cssSelector',
            markEl: false,
            multiple: false,
            selector: 'button.comment__header__video-btn',
            waitForSelector: true,
            waitSelectorTimeout: 5000,
          },
          events: {},
          id: 'zd90gr0',
          label: 'event-click',
          position: {
            x: 1634.2756133000366,
            y: 128.49781033249246,
          },
        },
        {
          type: 'BlockDelay',
          data: {
            disableBlock: false,
            time: '5000',
          },
          events: {},
          id: 'lhukk5m',
          label: 'delay',
          position: {
            x: 1925.0759392284342,
            y: 104.31457831317675,
          },
        },
        {
          type: 'BlockDelay',
          data: {
            disableBlock: false,
            time: '2000',
          },
          events: {},
          id: 'fh8ezj5',
          label: 'delay',
          position: {
            x: 367.64955715064957,
            y: 408.3137675355466,
          },
        },
        {
          type: 'BlockBasic',
          data: {
            code: "// 获取评论数量\nlet replyItemNum = automaRefData('variables', 'replyItemNum')\n// 获取评论数据\nconst replyList = automaRefData('globalData', 'replyArr');\n// 获取关键词的数据\nconst keyWordList = automaRefData('globalData', 'keyWord');\n// 名字违规词列表\nconst rulesWordList = automaRefData('globalData', 'rulesWord')\nconst bName = automaRefData('variables', 'businessName')\nconst seckey = automaRefData('globalData','seckey')\nconst scriptVersion = automaRefData('globalData', 'scriptVersion')\nconst defaultReply = automaRefData('globalData', 'defaultReply')\n// 随机从回复数组中抽取3个出来，一个视频最多回复3条\nconst replyArr = replyList.filter(() => Math.random() < (3 / replyList.length))\nconst defaultReplyArr = defaultReply.filter(()=> Math.random() < (3 / defaultReply.length))\n// 回复最大的数量\nlet maxNum = 3;\n// 从评论数组中获取评论的索引\nlet replyIndex = 0;\nlet defaultReplyIndex = 0;\nlet jumpOut = false;\nlet nonceStr = ''\nlet sign = ''\nlet bizStr = ''\nlet identity = ''\nconst timestamp = Date.now()\nconst reportApi = automaRefData('globalData', 'reportApi')\nconst dataSource = automaRefData('globalData', 'dataSource')\nconst applicationScene = automaRefData('globalData', 'applicationScene')\nlet externalUserId = automaRefData('variables', 'businessId')\nconst name = automaRefData('variables', 'name')\nconst pubTime = automaRefData('variables', 'pubTime')\nfunction delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nasync function run() {\n    await delay(1000); // 等待1秒\n    console.log(\"点击了筛选器\")\n    //步骤1:切换按点赞量排序\n    const selector = document.querySelector(\".el-input__inner\")\n    selector.click()\n    await delay(1000); // 等待1秒\n    document.querySelectorAll(\".el-select-dropdown__item\")[0].click() \n    console.log(\"点击了点赞排序\")\n    await delay(3000); // 等待1秒\n    console.log(\"开始遍历评论列表\")\n    // 步骤2: 获取评论列表\n    jumpOut = false\n    // 打开所有折叠的回复\n    const moreMsg = document.querySelectorAll('.comment-item__content__expand-btn')\n    for (let i =0;i<moreMsg.length;i++){\n      const item = moreMsg[i]\n      item.click()\n      await delay(1000); // 等待1秒\n    }\n    await delay(3000); // 等待3秒\n    const domList = document.querySelectorAll('.comment-item');\n    maxNum =await getMaxNum()\n    // 优先回复关键字\n    for (let i = 0; i < domList.length; i++) {\n      await delay(1000); // 等待1秒\n      console.log(\"maxNum:\"+maxNum)\n      if (maxNum <= 0){\n        console.log(\"跳出到下一个步骤\"+maxNum)\n        break\n      }\n      const data = domList[i];\n      //获取姓名和回复内容\n      const nickName = data.querySelector(\"[class^=comment-content__username]\").innerText;\n      const msg =  data.querySelector(\"[class^=comment-content__detail]\").innerText;\n      const time = data.querySelector(\"[class^=comment-content__date]\").innerText;\n      console.log(`nickName${nickName} msg:${msg} time:${time}`)\n      //如果没有回复，进行回复，否则跳过\n      console.log(\"length:\"+domList.length)\n      console.log(\"i:\"+i)\n      if (nickName.includes(\"作者\")){\n         console.log(\"nickName:\"+nickName)\n      }else{\n         const replyView = data.querySelector(\".comment-item__content__sub-comments\")\n         if (!replyView){\n           cName = nickName\n           await replyMsg(nickName,msg,data,time)\n         }\n      }\n      if (jumpOut){\n        break;\n      }\n    }\n    // 在回复兜底\n    for (let i = 0; i < domList.length; i++) {\n      await delay(1000); // 等待1秒\n      console.log(\"maxNum:\"+maxNum)\n      if (maxNum <= 0){\n        console.log(\"跳出到下一个步骤\"+maxNum)\n        break\n      }\n      const data = domList[i];\n      //获取姓名和回复内容\n      const nickName = data.querySelector(\"[class^=comment-content__username]\").innerText;\n      const msg =  data.querySelector(\"[class^=comment-content__detail]\").innerText;\n      const time = data.querySelector(\"[class^=comment-content__date]\").innerText;\n      //如果没有回复，进行回复，否则跳过\n      console.log(\"length:\"+domList.length)\n      console.log(\"i:\"+i)\n      if (nickName.includes(\"作者\")){\n         console.log(\"nickName:\"+nickName)\n      }else{\n         const replyView = data.querySelector(\".comment-item__content__sub-comments\")\n         if (!replyView){\n           cName = nickName\n           await replyMsgDefault(nickName,msg,data,time)\n         }\n      }\n      if (jumpOut){\n        break;\n      }\n    }\n    const num =await getMaxNum()\n    console.log(`存储数量为:${num}`)\n    automaNextBlock();\n}\nasync function replyMsg(nickName,msg,data,time){\n  console.log(\"nickName:\"+nickName)\n  let hasReply =false\n  // 没有回复过，判断能否匹配上关键词\n  for (let i =0;i<keyWordList.length;i++){\n    // 如果回复的消息中匹配了关键词,不进行回复\n    const hasRulesName = false;\n    for(let j=0;j<rulesWordList.length;j++){\n      if (nickName.includes(rulesWordList[j])){\n        hasRulesName = true;\n        break;\n      }\n    }\n    if (hasRulesName){\n      break;\n    }\n    // 打印消息\n    console.log(msg);\n    if (msg.includes(keyWordList[i])){\n        const replyMsg = replyArr[replyIndex]\n        replyIndex += 1\n        const result = await replyMsgAndReport(data,replyMsg,time,msg,nickName)\n        if (result){\n          break\n        }else{\n          hasReply = true\n          break\n        }\n    }\n  }\n  await setReplyNum()\n}\nasync function replyMsgDefault(nickName,msg,data,time){\n  console.log(\"nickName:\"+nickName)\n  let hasReply =false\n  // 没有回复过，判断能否匹配上关键词\n  for (let i =0;i<keyWordList.length;i++){\n    // 如果回复的消息中匹配了关键词,不进行回复\n    const hasRulesName = false;\n    for(let j=0;j<rulesWordList.length;j++){\n      if (nickName.includes(rulesWordList[j])){\n        hasRulesName = true;\n        break;\n      }\n    }\n    if (hasRulesName){\n      break;\n    }\n    // 打印消息\n    console.log(msg);\n    if (msg.includes(keyWordList[i])){\n        const replyMsg = replyArr[replyIndex]\n        replyIndex += 1\n        const result = await replyMsgAndReport(data,replyMsg,time,msg,nickName)\n        if (result){\n          break\n        }else{\n          hasReply = true\n          break\n        }\n    }\n  }\n  if(!hasReply){\n      const replyMsg = defaultReplyArr[defaultReplyIndex]\n      defaultReplyIndex += 1\n      const result = await replyMsgAndReport(data,replyMsg,time,msg,nickName)\n  }\n  await setReplyNum()\n  await delay(1000)\n}\nasync function replyMsgAndReport(data,replyMsg,time,msg,nickName){\n  // 点击回复按钮\n  const buttomList = data.querySelectorAll(\".comment-content__btns__btn\");\n  const reply = buttomList[1]\n  reply.click()\n  await delay(1000); // 等待1秒\n  // 获取输入框\n  const inputDom = data.querySelector(\".comment-input\")\n  inputDom.innerHTML = replyMsg\n  var event = new Event('input', {\n      bubbles: true,\n  });\n  inputDom.dispatchEvent(event);\n  await delay(1000); // 等待1秒\n  // 获取发送按钮\n  const buttonlist = data.querySelectorAll(\".comment-btn\")\n  buttonlist[1].click();\n  await delay(1000); // 等待1秒\n  \n  maxNum -= 1 ;\n  console.log(\"回复成功\")\n  nonceStr = await randomNum()\n  sign = await sha256()\n  const formattedTime = Date.now();\n  time = await parseTimeToTimestamp(time)\n  externalUserId = await matchNum(externalUserId)\n  let itemMsgUsr = {}\n  itemMsgUsr.time = time\n  itemMsgUsr.msg = msg\n  itemMsgUsr.nickName=nickName\n  let itemMsgB = {}\n  itemMsgB.time = formattedTime\n  itemMsgB.msg = replyMsg\n  itemMsgB.nickName=bName\n  let msgArr = []\n  msgArr.push(itemMsgUsr)\n  msgArr.push(itemMsgB)\n  await reportData(JSON.stringify(msgArr),externalUserId,sign)\n  replyItemNum += 1\n  automaSetVariable('replyItemNum', replyItemNum)\n  await delay(1000); // 等待1秒\n  return false\n}\n//生成密钥\nasync function sha256() {\n  const signStr = `${bizStr}&timestamp=${timestamp}&nonceStr=${nonceStr}&${seckey}`\n  // 将字符串转换为ArrayBuffer\n  const encoder = new TextEncoder();\n  const data = encoder.encode(signStr);\n  \n  // 计算散列值\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  \n  // 将散列值转换为十六进制字符串\n  const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n  return hashHex;\n}\nasync function reportData(content,externalUserId,sign){\n  if (reportApi !=\"\"){\n    console.log(reportApi)\n    console.log(`applicationScene:${applicationScene}\n    bExternalId:${externalUserId}\n    dataSource:${dataSource}\n    name:${name}\n    pubTime:${pubTime}\n    cName:${cName}  \n    bName:${bName} \n    content:${content}  \n    `)\n    automaFetch('json', {\n      url: reportApi,\n      method:'POST',\n      headers:{\n        'content-type': 'application/json',\n        'X-Outer-Auth-Sign':sign,\n        'X-Outer-Auth-Timestamp':timestamp,\n        'X-Outer-Auth-NonceStr':nonceStr},\n      body: JSON.stringify({\n        \"applicationScene\": applicationScene,\n        \"bExternalId\":externalUserId,\n        \"dataSource\":dataSource,\n        \"name\":name,\n        \"pubTime\":pubTime,\n        \"bName\":bName,\n        \"cName\":cName,\n        \"content\":content,\n        \"scriptVersion\":scriptVersion\n        }),\n      }) .then(response => {\n          // 处理响应结果\n          console.log(response.status)\n          console.log(response.msg)\n          return response\n        }).then(data =>{\n          console.log(`data:${data.text}`)\n        }).catch(error => {\n          // 捕获Promise链中的错误\n          console.log(error);\n    });\n  }\n}\nasync function parseTimeToTimestamp(timeString) {\n  let timestamp;\n  // 尝试直接解析标准日期格式\n  const date = new Date(timeString);\n  if (!isNaN(date.getTime())) {\n    timestamp = date.getTime();\n  }\n  // 处理 \"昨天\" 时间格式\n  else if (timeString.includes('昨天')) {\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(today.getDate() - 1);\n    const timeParts = timeString.replace('昨天', '').trim().split(':');\n    if (timeParts.length === 2) {\n      yesterday.setHours(parseInt(timeParts[0], 10), parseInt(timeParts[1], 10));\n      timestamp = yesterday.getTime();\n    }\n  }\n  else if(timeString === \"刚刚\"){\n    const now = new Date();\n    timestamp = now.getTime();\n  }\n  else if (/\\d+分钟前/.test(timeString)) {\n    const minutesAgo = parseInt(timeString.match(/\\d+/)[0], 10);\n    const now = new Date();\n    now.setMinutes(now.getMinutes() - minutesAgo);\n    timestamp = now.getTime();\n  }\n  else if(/\\d+小时前/.test(timeString)){\n    const hoursAgo = parseInt(timeString.match(/\\d+/)[0], 10);\n    const now = new Date();\n    now.setHours(now.getHours() - hoursAgo);\n    timestamp = now.getTime();\n  }\n  // 处理 \"星期X\" 时间格式\n  else if (timeString.includes('星期')) {\n    const daysOfWeek = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'];\n    const today = new Date();\n    const currentDayIndex = today.getDay(); // 获取今天是星期几\n    let dayName = timeString.match(/星期[日一二三四五六]/)[0];\n    let dayIndex = daysOfWeek.indexOf(dayName);\n    let timeParts = timeString.replace(dayName, '').trim().split(':');\n    \n    if (dayIndex === -1 || timeParts.length !== 2) {\n      return 'Invalid input format'; // 输入格式无效\n    }\n    \n    // 计算上一个星期的对应日期\n    let date = new Date();\n    date.setDate(date.getDate() - (currentDayIndex - dayIndex + 7) % 7);\n    date.setHours(parseInt(timeParts[0], 10));\n    date.setMinutes(parseInt(timeParts[1], 10));\n    date.setSeconds(0);\n    date.setMilliseconds(0);\n\n    timestamp = date.getTime();\n  }\n \n  // 处理 \"HH:MM\" 时间格式\n  else {\n    const timeParts = timeString.split(':');\n    if (timeParts.length === 2) {\n      const now = new Date();\n      now.setHours(parseInt(timeParts[0], 10), parseInt(timeParts[1], 10));\n      timestamp = now.getTime();\n    }else{\n      return timeString\n    }\n  }\n  \n  return await timestampToDateTime(timestamp);\n}\nasync function timestampToDateTime(timestamp) {\n  // 创建一个新的Date对象\n  const date = new Date(timestamp);\n\n  // 格式化日期和时间\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, '0'); // 月份是从0开始的\n  const day = date.getDate().toString().padStart(2, '0');\n  const hours = date.getHours().toString().padStart(2, '0');\n  const minutes = date.getMinutes().toString().padStart(2, '0');\n  const seconds = date.getSeconds().toString().padStart(2, '0');\n\n  // 构建日期时间字符串\n  const dateTimeString = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n\n  return dateTimeString;\n}\nasync function randomNum(){\n    const random_length = 16\n    const characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    // 生成随机数\n    let random_string = '';\n    for (let i = 0; i < random_length; i++) {\n        const random_index = Math.floor(Math.random() * characters.length);\n        random_string += characters[random_index];\n    }\n    return random_string;\n}\nasync function matchNum(inputString){\n  const regex = /\\d+$/;\n  console.log(`inputString:${inputString}`)\n  const match = inputString.match(regex);\n  if (match) {\n    console.log(match[0]); // 输出匹配到的数字\n    return match[0]\n  } else {\n    console.log(\"没找到数字\"); // 如果没有匹配到数字，输出这句话\n  }\n}\nasync function getMaxNum(){\n   if(typeof Storage !==\"undefined\"){//支持 localStorage\n    //在这里使用 localStorage 的操作} \n    const replyNumStr = localStorage.getItem(\"replyNum-ks\")\n    if(replyNumStr){\n      const replyNum = JSON.parse(replyNumStr)\n      console.log(`replyNum:${replyNumStr}`)\n      for (let i =0;i<replyNum.length;i++){\n          const item = replyNum[i]\n          if (item.name == name && item.pubTime == pubTime){\n              maxNum =item.maxNum \n              break\n          }\n      }\n    }\n  }\n  return maxNum\n}\nasync function setReplyNum(){\n  if(typeof Storage !==\"undefined\"){//支持 localStorage\n    //在这里使用 localStorage 的操作} \n    const replyNumStr = localStorage.getItem(\"replyNum-ks\")\n    console.log(`replyNumStr:${replyNumStr}`)\n    if(replyNumStr){\n      const replyNum = JSON.parse(replyNumStr)\n      console.log(`replyNum:${replyNumStr}`)\n      let hasName = false\n      let index = -1\n      let changeItem = {}\n      for (let i =0;i<replyNum.length;i++){\n          const item = replyNum[i]\n          console.log(`item.name:${item.name} item.pubTime:${item.pubTime} name:${name} pubTime:${pubTime} maxNum:${maxNum}`)\n          if (item.name == name && item.pubTime == pubTime){\n              item.maxNum = maxNum\n              changeItem = item\n              index = i\n              hasName = true\n              console.log(`name:${JSON.stringify(item)}`)\n              break\n          }\n      }\n      if (index != -1){\n        replyNum[index] = changeItem\n        console.log(\"replyNum-ks\",JSON.stringify(replyNum))\n      }\n      if (!hasName){\n        const newReplyBean = await buildData()\n        replyNum.reverse()\n        if(replyNum.length >= 20){\n          replyNum.shift()\n        }\n        replyNum.push(newReplyBean)\n        replyNum.reverse()\n        localStorage.setItem(\"replyNum-ks\",JSON.stringify(replyNum))\n      }else{\n        localStorage.setItem(\"replyNum-ks\",JSON.stringify(replyNum))\n      }\n    }else{\n      const replyNum = []\n      const newReplyBean = await buildData()\n      replyNum.push(newReplyBean)\n      console.log(`存储replyNumBean${JSON.stringify(replyNum)}`)\n      localStorage.setItem(\"replyNum-ks\",JSON.stringify(replyNum))\n    }\n  }else {\n    //不支持 localStorage\n    console.log(\"对不起，您的浏览器不支持 localStorage。\")\n    alert(\"对不起，您的浏览器不支持 localStorage。\") \n  }\n}\nasync function buildData(){\n   let replyNumBean={}\n   replyNumBean.name = name\n   replyNumBean.pubTime = pubTime\n   replyNumBean.maxNum = maxNum\n   return replyNumBean\n}\n//点击按点赞量排序\nrun();\n",
            context: 'website',
            description: '循环评论列表 & 日志落库',
            disableBlock: false,
            everyNewTab: false,
            preloadScripts: [],
            runBeforeLoad: false,
            timeout: 20000,
          },
          events: {},
          id: 'upcignn',
          label: 'javascript-code',
          position: {
            x: 709.6121956933198,
            y: 452.16963349582124,
          },
        },
        {
          type: 'BlockBasic',
          data: {
            activeTab: false,
            createIfNoMatch: true,
            description: '打开快手创作者服务平台',
            disableBlock: false,
            findTabBy: 'match-patterns',
            matchPattern: 'https://cp.kuaishou.com/profile',
            tabIndex: 0,
            tabTitle: '',
            url: 'https://cp.kuaishou.com/profile',
          },
          events: {},
          id: 'cq4koep',
          label: 'switch-tab',
          position: {
            x: 417.3095733629858,
            y: -113.5102256673432,
          },
        },
        {
          type: 'BlockBasic',
          data: {
            addExtraRow: false,
            assignVariable: true,
            dataColumn: '',
            description: '获取昵称',
            disableBlock: false,
            extraRowDataColumn: '',
            extraRowValue: '',
            findBy: 'cssSelector',
            includeTags: false,
            markEl: false,
            multiple: false,
            prefixText: '',
            regex: '',
            regexExp: [],
            saveData: false,
            selector: 'div.info-top-name',
            suffixText: '',
            useTextContent: false,
            variableName: 'businessName',
            waitForSelector: true,
            waitSelectorTimeout: 5000,
          },
          events: {},
          id: 'hkomn8t',
          label: 'get-text',
          position: {
            x: 1005.6757851217014,
            y: -113.12285883156383,
          },
        },
        {
          type: 'BlockDelay',
          data: {
            disableBlock: false,
            time: '1500',
          },
          events: {},
          id: 'gn2574k',
          label: 'delay',
          position: {
            x: 722.2812710614493,
            y: -140.49557950216436,
          },
        },
        {
          type: 'BlockBasic',
          data: {
            description: '点击互动管理',
            disableBlock: false,
            findBy: 'cssSelector',
            markEl: false,
            multiple: false,
            selector: '.el-submenu:nth-child(5) span',
            waitForSelector: false,
            waitSelectorTimeout: 5000,
          },
          events: {},
          id: 'kugt8d6',
          label: 'event-click',
          position: {
            x: 1831.3786530828627,
            y: -113.12938622908624,
          },
        },
        {
          type: 'BlockBasic',
          data: {
            addExtraRow: false,
            assignVariable: true,
            dataColumn: '',
            description: '获取id',
            disableBlock: false,
            extraRowDataColumn: '',
            extraRowValue: '',
            findBy: 'cssSelector',
            includeTags: false,
            markEl: false,
            multiple: false,
            prefixText: '',
            regex: '',
            regexExp: [],
            saveData: false,
            selector: 'div.info-top-number',
            suffixText: '',
            useTextContent: false,
            variableName: 'businessId',
            waitForSelector: true,
            waitSelectorTimeout: 5000,
          },
          events: {},
          id: 'e0rgkeg',
          label: 'get-text',
          position: {
            x: 1274.5988841393064,
            y: -119.0181181552076,
          },
        },
        {
          type: 'BlockBasic',
          data: {
            description: '点击评论管理',
            disableBlock: false,
            findBy: 'cssSelector',
            markEl: false,
            multiple: false,
            selector: '.el-submenu:nth-child(5) .el-menu-item',
            waitForSelector: true,
            waitSelectorTimeout: 5000,
          },
          events: {},
          id: 'zgt5mei',
          label: 'event-click',
          position: {
            x: 104.67798438808427,
            y: 126.76752761942936,
          },
        },
        {
          type: 'BlockBasic',
          data: {
            activeTab: true,
            allWindows: false,
            closeType: 'tab',
            description: '',
            disableBlock: false,
            url: '',
          },
          events: {},
          id: 'r391yh2',
          label: 'close-tab',
          position: {
            x: 1540.0128090810388,
            y: 528.1271240366468,
          },
        },
        {
          type: 'BlockBasic',
          data: {
            dataList: [
              {
                action: 'default',
                filePath: '',
                isFile: false,
                name: 'listIndex',
                type: 'variable',
                value: '0',
              },
              {
                action: 'default',
                filePath: '',
                isFile: false,
                name: 'stopLoop',
                type: 'variable',
                value: 'false',
              },
              {
                action: 'default',
                filePath: '',
                isFile: false,
                name: 'replyVideoNum',
                type: 'variable',
                value: '0',
              },
              {
                action: 'default',
                filePath: '',
                isFile: false,
                name: 'replyItemNum',
                type: 'variable',
                value: '0',
              },
            ],
            description: '',
            disableBlock: false,
          },
          events: {},
          id: 'eirm6ud',
          label: 'insert-data',
          position: {
            x: 845.8949442815842,
            y: 119.70249353938846,
          },
        },
        {
          type: 'BlockBasicWithFallback',
          data: {
            conditions: [
              {
                conditions: [
                  {
                    id: 't41G08HJPPt31_iMWN5Oo',
                    items: [
                      {
                        category: 'value',
                        data: {
                          value: '{{variables@stopLoop}}',
                        },
                        id: 'FJenH_VmRZkgWIp8K6eKl',
                        type: 'value',
                      },
                      {
                        category: 'compare',
                        id: 'm9GMokqkVCPpmewyY-xyH',
                        type: 'ifl',
                      },
                    ],
                  },
                ],
                id: 'u8SOWxBChddc1ra4OC2Ab',
              },
            ],
            description: '',
            disableBlock: false,
          },
          events: {},
          id: 'd9kyesa',
          label: 'while-loop',
          position: {
            x: 1248.8154281105726,
            y: 107.72605833461483,
          },
        },
        {
          type: 'BlockDelay',
          data: {
            disableBlock: false,
            time: '1500',
          },
          events: {},
          id: '47agobm',
          label: 'delay',
          position: {
            x: 1557.1438707309471,
            y: -134.74599313338237,
          },
        },
        {
          type: 'BlockDelay',
          data: {
            disableBlock: false,
            time: '1000',
          },
          events: {},
          id: '5godb9z',
          label: 'delay',
          position: {
            x: 463.35194114008357,
            y: 93.19548290780696,
          },
        },
        {
          type: 'BlockDelay',
          data: {
            disableBlock: false,
            time: '2000',
          },
          events: {},
          id: 'ewz3qel',
          label: 'delay',
          position: {
            x: 1036.781703327344,
            y: 420.2178134820148,
          },
        },
        {
          type: 'BlockBasic',
          data: {
            code: "let listIndex = automaRefData('variables', 'listIndex');\nlet replyVideoNum = automaRefData('variables', 'replyVideoNum')\nconst list = document.querySelectorAll(\".video-item\");\nif (listIndex < list.length){\n  console.log(\"遍历点击\");\n  const item = list[listIndex]\n  name = item.querySelector(\"[class^=video-info__content__title]\").innerText\n  pubTime = item.querySelector(\".video-info__content__date\").innerText\n  console.log(`视频名称：${name}`);\n  item.click()\n  automaSetVariable('name', name)\n  automaSetVariable('pubTime', pubTime)\n  automaSetVariable('stopLoop', false)\n  automaSetVariable('listIndex', listIndex+1)\n  automaSetVariable('replyVideoNum', replyVideoNum +1)\n}else{\n  console.log(\"结束循环\");\n  automaSetVariable('stopLoop', true)\n}\nautomaNextBlock();",
            context: 'website',
            description: '循环作品列表',
            disableBlock: false,
            everyNewTab: false,
            preloadScripts: [],
            runBeforeLoad: false,
            timeout: 20000,
          },
          events: {},
          id: '7twd60p',
          label: 'javascript-code',
          position: {
            x: 48,
            y: 446,
          },
        },
        {
          type: 'BlockDelay',
          data: {
            disableBlock: false,
            time: '100',
          },
          events: {},
          id: 'pbqlq3y',
          label: 'delay',
          position: {
            x: 2137.143870730947,
            y: -133.74599313338237,
          },
        },
      ],
      edges: [
        {
          type: 'custom',
          updatable: true,
          selectable: true,
          markerEnd: 'arrowclosed',
          sourceHandle: 'zd90gr0-output-1',
          targetHandle: 'lhukk5m-input-1',
          source: 'zd90gr0',
          target: 'lhukk5m',
          data: {},
          events: {},
          id: 'vueflow__edge-zd90gr0zd90gr0-output-1-lhukk5mlhukk5m-input-1',
          sourceX: 1846.2756133000366,
          sourceY: 164.49781033249246,
          targetX: 1905.0759392284342,
          targetY: 162.90832831317675,
        },
        {
          type: 'custom',
          updatable: true,
          selectable: true,
          markerEnd: 'arrowclosed',
          sourceHandle: 'o5zggh5F_y-yuKvN9914Q-output-1',
          targetHandle: 'cq4koep-input-1',
          source: 'o5zggh5F_y-yuKvN9914Q',
          target: 'cq4koep',
          data: {},
          events: {},
          id: 'vueflow__edge-o5zggh5F_y-yuKvN9914Qo5zggh5F_y-yuKvN9914Q-output-1-cq4koepcq4koep-input-1',
          sourceX: 310.9048982191099,
          sourceY: -77.41361806367796,
          targetX: 397.3095733629858,
          targetY: -77.5102256673432,
          class: 'connected-edges',
        },
        {
          type: 'custom',
          updatable: true,
          selectable: true,
          markerEnd: 'arrowclosed',
          sourceHandle: 'cq4koep-output-1',
          targetHandle: 'gn2574k-input-1',
          source: 'cq4koep',
          target: 'gn2574k',
          data: {},
          events: {},
          id: 'vueflow__edge-cq4koepcq4koep-output-1-gn2574kgn2574k-input-1',
          sourceX: 629.3095733629858,
          sourceY: -77.5102256673432,
          targetX: 702.2812710614493,
          targetY: -81.90182950216436,
        },
        {
          type: 'custom',
          updatable: true,
          selectable: true,
          markerEnd: 'arrowclosed',
          sourceHandle: 'gn2574k-output-1',
          targetHandle: 'hkomn8t-input-1',
          source: 'gn2574k',
          target: 'hkomn8t',
          data: {},
          events: {},
          id: 'vueflow__edge-gn2574kgn2574k-output-1-hkomn8thkomn8t-input-1',
          sourceX: 934.2812710614493,
          sourceY: -81.90182950216436,
          targetX: 985.6757851217014,
          targetY: -77.12285883156383,
        },
        {
          type: 'custom',
          updatable: true,
          selectable: true,
          markerEnd: 'arrowclosed',
          sourceHandle: 'hkomn8t-output-1',
          targetHandle: 'e0rgkeg-input-1',
          source: 'hkomn8t',
          target: 'e0rgkeg',
          data: {},
          events: {},
          id: 'vueflow__edge-hkomn8thkomn8t-output-1-e0rgkege0rgkeg-input-1',
          sourceX: 1217.6757851217014,
          sourceY: -77.12285883156383,
          targetX: 1254.5988841393064,
          targetY: -83.0181181552076,
        },
        {
          type: 'custom',
          updatable: true,
          selectable: true,
          markerEnd: 'arrowclosed',
          sourceHandle: 'e0rgkeg-output-1',
          targetHandle: '47agobm-input-1',
          source: 'e0rgkeg',
          target: '47agobm',
          data: {},
          events: {},
          id: 'vueflow__edge-e0rgkege0rgkeg-output-1-kugt8d6kugt8d6-input-1',
          sourceX: 1486.5988841393064,
          sourceY: -83.0181181552076,
          targetX: 1537.1438707309471,
          targetY: -76.15224313338237,
        },
        {
          type: 'custom',
          updatable: true,
          selectable: true,
          markerEnd: 'arrowclosed',
          sourceHandle: 'pbqlq3y-output-1',
          targetHandle: 'zgt5mei-input-1',
          source: 'pbqlq3y',
          target: 'zgt5mei',
          data: {},
          events: {},
          id: 'vueflow__edge-kugt8d6kugt8d6-output-1-zgt5meizgt5mei-input-1',
          sourceX: 2349.143870730947,
          sourceY: -75.15224313338237,
          targetX: 84.67798438808427,
          targetY: 162.76752761942936,
        },
        {
          type: 'custom',
          updatable: true,
          selectable: true,
          markerEnd: 'arrowclosed',
          sourceHandle: 'eirm6ud-output-1',
          targetHandle: 'd9kyesa-input-1',
          source: 'eirm6ud',
          target: 'd9kyesa',
          data: {},
          events: {},
          id: 'vueflow__edge-eirm6udeirm6ud-output-1-d9kyesad9kyesa-input-1',
          sourceX: 1057.8949442815842,
          sourceY: 155.70249353938846,
          targetX: 1228.8154281105726,
          targetY: 155.72605833461483,
        },
        {
          type: 'custom',
          updatable: true,
          selectable: true,
          markerEnd: 'arrowclosed',
          sourceHandle: 'd9kyesa-output-1',
          targetHandle: 'zd90gr0-input-1',
          source: 'd9kyesa',
          target: 'zd90gr0',
          data: {},
          events: {},
          id: 'vueflow__edge-d9kyesad9kyesa-output-1-zd90gr0zd90gr0-input-1',
          sourceX: 1460.8154281105726,
          sourceY: 155.72605833461483,
          targetX: 1614.2756133000366,
          targetY: 164.49781033249246,
        },
        {
          type: 'custom',
          updatable: true,
          selectable: true,
          markerEnd: 'arrowclosed',
          sourceHandle: '47agobm-output-1',
          targetHandle: 'kugt8d6-input-1',
          source: '47agobm',
          target: 'kugt8d6',
          data: {},
          events: {},
          id: 'vueflow__edge-47agobm47agobm-output-1-kugt8d6kugt8d6-input-1',
          sourceX: 1769.1439928012596,
          sourceY: -76.15224313338237,
          targetX: 1811.3786530828627,
          targetY: -77.12938622908624,
        },
        {
          type: 'custom',
          updatable: true,
          selectable: true,
          markerEnd: 'arrowclosed',
          sourceHandle: 'zgt5mei-output-1',
          targetHandle: '5godb9z-input-1',
          source: 'zgt5mei',
          target: '5godb9z',
          data: {},
          events: {},
          id: 'vueflow__edge-zgt5meizgt5mei-output-1-5godb9z5godb9z-input-1',
          sourceX: 316.67798438808427,
          sourceY: 162.76752761942936,
          targetX: 443.35194114008357,
          targetY: 151.78923290780696,
        },
        {
          type: 'custom',
          updatable: true,
          selectable: true,
          markerEnd: 'arrowclosed',
          sourceHandle: '5godb9z-output-1',
          targetHandle: 'eirm6ud-input-1',
          source: '5godb9z',
          target: 'eirm6ud',
          data: {},
          events: {},
          id: 'vueflow__edge-5godb9z5godb9z-output-1-eirm6udeirm6ud-input-1',
          sourceX: 675.3519411400836,
          sourceY: 151.78923290780696,
          targetX: 825.8949442815842,
          targetY: 155.70249353938846,
        },
        {
          type: 'custom',
          updatable: true,
          selectable: true,
          markerEnd: 'arrowclosed',
          sourceHandle: 'upcignn-output-1',
          targetHandle: 'ewz3qel-input-1',
          source: 'upcignn',
          target: 'ewz3qel',
          data: {},
          events: {},
          id: 'vueflow__edge-upcignnupcignn-output-1-ewz3qelewz3qel-input-1',
          sourceX: 921.6121956933198,
          sourceY: 488.16966401339937,
          targetX: 1016.7817033273441,
          targetY: 478.8115634820148,
        },
        {
          type: 'custom',
          updatable: true,
          selectable: true,
          markerEnd: 'arrowclosed',
          sourceHandle: 'ewz3qel-output-1',
          targetHandle: 'd9kyesa-input-1',
          source: 'ewz3qel',
          target: 'd9kyesa',
          data: {},
          events: {},
          id: 'vueflow__edge-ewz3qelewz3qel-output-1-d9kyesad9kyesa-input-1',
          sourceX: 1248.781703327344,
          sourceY: 478.8115634820148,
          targetX: 1228.8154281105726,
          targetY: 155.72605833461483,
        },
        {
          type: 'custom',
          updatable: true,
          selectable: true,
          markerEnd: 'arrowclosed',
          sourceHandle: '7twd60p-output-1',
          targetHandle: 'fh8ezj5-input-1',
          source: '7twd60p',
          target: 'fh8ezj5',
          data: {},
          events: {},
          id: 'vueflow__edge-7twd60p7twd60p-output-1-fh8ezj5fh8ezj5-input-1',
          sourceX: 260,
          sourceY: 482,
          targetX: 347.64955715064957,
          targetY: 466.9075175355466,
        },
        {
          type: 'custom',
          updatable: true,
          selectable: true,
          markerEnd: 'arrowclosed',
          sourceHandle: 'lhukk5m-output-1',
          targetHandle: '7twd60p-input-1',
          source: 'lhukk5m',
          target: '7twd60p',
          data: {},
          events: {},
          id: 'vueflow__edge-lhukk5mlhukk5m-output-1-7twd60p7twd60p-input-1',
          sourceX: 2137.0759392284344,
          sourceY: 162.90832831317675,
          targetX: 28,
          targetY: 482,
        },
        {
          type: 'custom',
          updatable: true,
          selectable: true,
          markerEnd: 'arrowclosed',
          sourceHandle: 'fh8ezj5-output-1',
          targetHandle: 'upcignn-input-1',
          source: 'fh8ezj5',
          target: 'upcignn',
          data: {},
          events: {},
          id: 'vueflow__edge-fh8ezj5fh8ezj5-output-1-upcignnupcignn-input-1',
          sourceX: 579.6495571506496,
          sourceY: 466.9075175355466,
          targetX: 689.6121956933198,
          targetY: 488.16966401339937,
        },
        {
          type: 'custom',
          updatable: true,
          selectable: true,
          markerEnd: 'arrowclosed',
          sourceHandle: 'kugt8d6-output-1',
          targetHandle: 'pbqlq3y-input-1',
          source: 'kugt8d6',
          target: 'pbqlq3y',
          data: {},
          events: {},
          id: 'vueflow__edge-kugt8d6kugt8d6-output-1-pbqlq3ypbqlq3y-input-1',
          sourceX: 2043.3786530828627,
          sourceY: -77.12938622908624,
          targetX: 2117.143870730947,
          targetY: -75.15224313338237,
        },
        {
          sourceHandle: 'd9kyesa-output-fallback',
          targetHandle: 'r391yh2-input-1',
          type: 'custom',
          source: 'd9kyesa',
          target: 'r391yh2',
          updatable: true,
          selectable: true,
          data: {},
          events: {},
          class: 'source-d9kyesa-output-fallback target-r391yh2-input-1',
          markerEnd: 'arrowclosed',
          id: 'vueflow__edge-d9kyesad9kyesa-output-fallback-r391yh2r391yh2-input-1',
          sourceX: 1460.8154281105726,
          sourceY: 177.72605833461483,
          targetX: 1520.0128090810388,
          targetY: 564.1271240366468,
        },
      ],
      position: [131, 405],
      zoom: 1,
      viewport: {
        x: 131,
        y: 405,
        zoom: 1,
      },
    },
    settings: {
      blockDelay: 0,
      debugMode: false,
      defaultColumnName: 'column',
      execContext: 'popup',
      executedBlockOnWeb: true,
      inputAutocomplete: true,
      insertDefaultColumn: false,
      notification: true,
      onError: 'stop-workflow',
      publicId: '',
      restartTimes: 3,
      reuseLastState: false,
      saveLog: true,
      tabLoadTimeout: 30000,
    },
    globalData:
      '{\n  "reportApi":"https://vshow.58.com/live/externaldata/report",\n  "applicationScene":"4",\n  "dataSource":"1",\n  "index":1,\n  "scriptVersion":"1.0.0",\n  "seckey":"B&2%xnbl*@7%17BfGRaFr43inCxj70!2",\n  "seckey_test":"Umrh^6wRpac@6CtAR8rg31@T5L@mW4zq",\n  "replyArr": [\n    "亲，感兴趣可以私聊具体服务内容啊",\n    "私聊获取最新服务报价啊",\n    "可以私聊，我这边发您最新的资料",\n    "私聊发您最新的服务内容啊",\n    "私聊细节啊，这位老板"\n  ],\n  "keyWord":[\n    "怎么弄",\n    "咋做",\n    "多少钱",\n    "怎么联系",\n    "想了解",\n    "求带",\n    "多钱",\n    "多少米",\n    "咨询",\n    "求带",\n    "求资料",\n    "怎么收费",\n    "怎么卖",\n    "怎么合作",\n    "什么软件"\n  ],\n  "rulesWord":[\n    "数字人",\n    "科技",\n    "AI",\n    "家政",\n    "保洁",\n    "清洁"\n  ],\n  "defaultReply":[\n    "欢迎感兴趣的老板关注哦～ 私信我可获取最新服务报价",\n    "感谢老板关注",\n    "我们努力为您提供专业服务，感谢您的关注"\n  ]\n}',
    description:
      'v1.0.0：自动回复评论，限制前20个视频进行回复，评论数据统计，日志落库， 对评论增加通用回复',
    includedWorkflows: {},
  },
];
